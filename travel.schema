-- üóÇÔ∏è Product 
CREATE TABLE IF NOT EXISTS Product (
    Product TEXT NOT NULL,
    Notes TEXT,
    status INTEGER DEFAULT 1 
);

-- üóÇÔ∏è Vendor 
CREATE TABLE IF NOT EXISTS Vendor (
    Vendor TEXT NOT NULL,
    Notes TEXT,
    status INTEGER DEFAULT 1 
);

-- üóÇÔ∏è Client 
CREATE TABLE IF NOT EXISTS Client (
    Client TEXT NOT NULL,
    Notes TEXT,
    status INTEGER DEFAULT 1 
);

-- üë§ Customer 
CREATE TABLE IF NOT EXISTS Customer (
    customer_id INTEGER PRIMARY KEY AUTOINCREMENT,
    first_name  TEXT,
    middle_name  TEXT,
    last_name  TEXT,
    hangul_name  TEXT,
    sex  TEXT,
    date_of_birth TEXT,
    credit_card TEXT,
    credit_card_date TEXT,
    is_representative INTEGER DEFAULT 0,
    status INTEGER DEFAULT 1
);

CREATE INDEX IF NOT EXISTS idx_customer_status
ON Customer(status);

-- ‚úàÔ∏è Flight 
CREATE TABLE IF NOT EXISTS Flight (
    Flight TEXT NOT NULL,
    Notes TEXT,
    status INTEGER DEFAULT 1 
);

-- üöê Pickup 
CREATE TABLE IF NOT EXISTS Pickup (
    Pickup TEXT NOT NULL,
    Notes TEXT,
    status INTEGER DEFAULT 1 
);

-- üß≥ Travel	
CREATE TABLE IF NOT EXISTS Travel (
    travel_id INTEGER PRIMARY KEY AUTOINCREMENT,
    Product TEXT,
    Vendor TEXT,
    Customer TEXT,
    Flight TEXT,
    Pickup TEXT,
    pickup_time TEXT,	--ISO 8601 format ('YYYY-MM-DD HH:MM:SS') 
    confirmation_code TEXT,
    airfair_IB INTEGER DEFAULT 0,
    airfair_OB INTEGER DEFAULT 0,
    time_IB TEXT,	--ISO 8601 format ('YYYY-MM-DD HH:MM:SS') 
    time_OB TEXT,	--ISO 8601 format ('YYYY-MM-DD HH:MM:SS') 
    deposite INTEGER DEFAULT 0,
    payment INTEGER DEFAULT 0,
    event_expense INTEGER DEFAULT 0,
    Notes TEXT,
    FOREIGN KEY (Product) REFERENCES Product(Product),
    FOREIGN KEY (Vendor) REFERENCES Vendor(Vendor),
    FOREIGN KEY (Customer) REFERENCES Customer(Customer),
    FOREIGN KEY (Flight) REFERENCES Flight(Flight),
    FOREIGN KEY (Pickup) REFERENCES Pickup(Pickup)
);

-- üìú Travel History 
CREATE TABLE IF NOT EXISTS  Travel_History (
    travel_id INTEGER,
    deposite INTEGER,
    payment INTEGER,
    event_expense INTEGER,
    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP
); 

CREATE INDEX IF NOT EXISTS idx_travel_history
ON Travel_History(travel_id);

CREATE TRIGGER IF NOT EXISTS log_travel_insert
AFTER INSERT ON Travel
FOR EACH ROW
BEGIN
    INSERT INTO Travel_History (travel_id, deposite, payment, event_expense, timestamp)
    VALUES (NEW.travel_id, NEW.deposite, NEW.payment, NEW.event_expense, CURRENT_TIMESTAMP);
END;


CREATE TRIGGER IF NOT EXISTS log_travel_update
AFTER UPDATE ON Travel
FOR EACH ROW
BEGIN
    INSERT INTO Travel_History (travel_id, deposite, payment, event_expense, timestamp)
    VALUES (NEW.travel_id, NEW.deposite, NEW.payment, NEW.event_expense, CURRENT_TIMESTAMP);
END;

CREATE INDEX IF NOT EXISTS idx_travel_history_timestamp
ON Travel_History(timestamp);

------------------------------------------

-- üóÇÔ∏è Product 
INSERT INTO Product (Product) VALUES
('KOA - ÏïåÎ°úÌïòÏôÄÏù¥'),
('Ïò§ÏïÑÌõÑ - VIP Îã®ÎèÖÌñâÏÇ¨');

-- üóÇÔ∏è Vendor 
INSERT INTO Vendor (Vendor) VALUES
('BADA'),
('ALO');

-- üóÇÔ∏è Client 
INSERT INTO Client (Client) VALUES
('I4U');

-- üë§ Customer 
INSERT INTO Customer (first_name, middle_name, last_name, hangul_name, sex, date_of_birth, credit_card, credit_card_date) VALUES
('YOUNG SOOK','','SONG','ÏÜ°ÏòÅÏÑù','M','1962-10-18','JB 0861','20250826'), 
('DONG GYU','','LEE','Ïù¥ÎèôÍ∑ú','M','1987-11-22','JB 0861','20250826'); 

-- ‚úàÔ∏è Flight 
INSERT INTO Flight (Flight) VALUES
('HA158'),
('WN3093');

-- üöê Pickup 
INSERT INTO Pickup (Pickup) VALUES
('HGI'),
('HRW');
